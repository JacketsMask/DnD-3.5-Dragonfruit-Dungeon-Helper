package gui.inventory;

import character.Player;
import character.inventory.Item;
import interfaces.CharacterInfoRetriever;

/**
 *
 * @author Japhez
 */
public class InventoryPanel extends javax.swing.JPanel implements CharacterInfoRetriever {

    private Player player;

    /**
     * Creates new form InventoryPanel
     */
    public InventoryPanel(Player player) {
        this.player = player;
        initComponents();
        inventoryList.setModel(player.getInventory().getItemList());
        //Info should be hidden by default, since no item is selected
        itemInfoPanel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        inventoryList = new javax.swing.JList();
        jLabel3 = new javax.swing.JLabel();
        inventoryAddNewItemButton = new javax.swing.JButton();
        inventoryRemoveSelectedItem = new javax.swing.JButton();
        currentWeightLabel = new javax.swing.JLabel();
        itemInfoPanel = new javax.swing.JPanel();
        currentlySelectedItemNameLabel = new javax.swing.JLabel();
        currentlySelectedItemWeightLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        currentlySelectedItemDescriptionTextArea = new javax.swing.JTextArea();
        inventoryModifyCurrentlySelectedItemButton = new javax.swing.JButton();
        inventoryActivateCurrentlySelectedItemButton = new javax.swing.JButton();

        inventoryList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        inventoryList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                inventoryListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(inventoryList);

        jLabel3.setText("Current Inventory");

        inventoryAddNewItemButton.setText("Add New Item");
        inventoryAddNewItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inventoryAddNewItemButtonActionPerformed(evt);
            }
        });

        inventoryRemoveSelectedItem.setText("Remove Selected Item");
        inventoryRemoveSelectedItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inventoryRemoveSelectedItemActionPerformed(evt);
            }
        });

        currentWeightLabel.setText("Current Weight: 0 ");

        currentlySelectedItemNameLabel.setText("[item name]");

        currentlySelectedItemWeightLabel.setText("[item weight]");

        jLabel7.setText("Item name:");

        jLabel11.setText("Item description:");

        jLabel35.setText("Item weight:");

        currentlySelectedItemDescriptionTextArea.setColumns(20);
        currentlySelectedItemDescriptionTextArea.setEditable(false);
        currentlySelectedItemDescriptionTextArea.setLineWrap(true);
        currentlySelectedItemDescriptionTextArea.setRows(5);
        currentlySelectedItemDescriptionTextArea.setWrapStyleWord(true);
        currentlySelectedItemDescriptionTextArea.setAutoscrolls(false);
        currentlySelectedItemDescriptionTextArea.setBorder(null);
        jScrollPane5.setViewportView(currentlySelectedItemDescriptionTextArea);

        javax.swing.GroupLayout itemInfoPanelLayout = new javax.swing.GroupLayout(itemInfoPanel);
        itemInfoPanel.setLayout(itemInfoPanelLayout);
        itemInfoPanelLayout.setHorizontalGroup(
            itemInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(itemInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                    .addGroup(itemInfoPanelLayout.createSequentialGroup()
                        .addGroup(itemInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addGroup(itemInfoPanelLayout.createSequentialGroup()
                                .addGroup(itemInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel35))
                                .addGap(38, 38, 38)
                                .addGroup(itemInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(currentlySelectedItemWeightLabel)
                                    .addComponent(currentlySelectedItemNameLabel))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        itemInfoPanelLayout.setVerticalGroup(
            itemInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(itemInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(currentlySelectedItemNameLabel)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(itemInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(currentlySelectedItemWeightLabel)
                    .addComponent(jLabel35))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        inventoryModifyCurrentlySelectedItemButton.setText("Modify Selected Item");
        inventoryModifyCurrentlySelectedItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inventoryModifyCurrentlySelectedItemButtonActionPerformed(evt);
            }
        });

        inventoryActivateCurrentlySelectedItemButton.setText("Activate Selected Item");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(inventoryRemoveSelectedItem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(currentWeightLabel)
                            .addComponent(inventoryModifyCurrentlySelectedItemButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(inventoryActivateCurrentlySelectedItemButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(inventoryAddNewItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(itemInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(currentWeightLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                        .addComponent(inventoryActivateCurrentlySelectedItemButton)
                        .addGap(18, 18, 18)
                        .addComponent(inventoryModifyCurrentlySelectedItemButton)
                        .addGap(18, 18, 18)
                        .addComponent(inventoryAddNewItemButton)
                        .addGap(18, 18, 18)
                        .addComponent(inventoryRemoveSelectedItem))
                    .addComponent(jScrollPane1))
                .addGap(23, 23, 23))
            .addComponent(itemInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void inventoryListValueChanged(javax.swing.event.ListSelectionEvent evt)//GEN-FIRST:event_inventoryListValueChanged
    {//GEN-HEADEREND:event_inventoryListValueChanged
        updateInventoryDisplayedInfo();
    }//GEN-LAST:event_inventoryListValueChanged

    private void inventoryAddNewItemButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_inventoryAddNewItemButtonActionPerformed
    {//GEN-HEADEREND:event_inventoryAddNewItemButtonActionPerformed
        new InventoryAddNewItemDialog(this, false, player).setVisible(true);
    }//GEN-LAST:event_inventoryAddNewItemButtonActionPerformed

    private void inventoryRemoveSelectedItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_inventoryRemoveSelectedItemActionPerformed
    {//GEN-HEADEREND:event_inventoryRemoveSelectedItemActionPerformed
        player.getInventory().getItemList().removeElement(inventoryList.getSelectedValue());
        updateInventoryDisplayedTotalWeight();
    }//GEN-LAST:event_inventoryRemoveSelectedItemActionPerformed

    private void inventoryModifyCurrentlySelectedItemButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_inventoryModifyCurrentlySelectedItemButtonActionPerformed
    {//GEN-HEADEREND:event_inventoryModifyCurrentlySelectedItemButtonActionPerformed
        if (!inventoryList.isSelectionEmpty()) {
            new InventoryModifyItemDialog(this, false, (Item) inventoryList.getSelectedValue()).setVisible(true);
        }
    }//GEN-LAST:event_inventoryModifyCurrentlySelectedItemButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel currentWeightLabel;
    private javax.swing.JTextArea currentlySelectedItemDescriptionTextArea;
    private javax.swing.JLabel currentlySelectedItemNameLabel;
    private javax.swing.JLabel currentlySelectedItemWeightLabel;
    private javax.swing.JButton inventoryActivateCurrentlySelectedItemButton;
    private javax.swing.JButton inventoryAddNewItemButton;
    private javax.swing.JList inventoryList;
    private javax.swing.JButton inventoryModifyCurrentlySelectedItemButton;
    private javax.swing.JButton inventoryRemoveSelectedItem;
    private javax.swing.JPanel itemInfoPanel;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane5;
    // End of variables declaration//GEN-END:variables

    public void updateInventoryDisplayedInfo() {
        //If the selection is empty, hide descriptor fields
        if (inventoryList.isSelectionEmpty()) {
            itemInfoPanel.setVisible(false);
        } else {
            if (!itemInfoPanel.isVisible()) {
                itemInfoPanel.setVisible(true);
            }
            Item item = (Item) inventoryList.getSelectedValue();
            currentlySelectedItemDescriptionTextArea.setText(item.getDescription());
            currentlySelectedItemNameLabel.setText(item.getName());
            currentlySelectedItemWeightLabel.setText("" + item.getWeight());
        }
    }

    public void updateInventoryDisplayedTotalWeight() {
        currentWeightLabel.setText("Current weight: " + player.getInventory().getInventoryWeight());
    }

    @Override
    public void loadInfo() {
        updateInventoryDisplayedInfo();
        updateInventoryDisplayedTotalWeight();
    }
}